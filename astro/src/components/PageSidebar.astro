---
import MobileTableOfContents from '@astrojs/starlight/components/MobileTableOfContents.astro';
import TableOfContents from '@astrojs/starlight/components/TableOfContents.astro';
import PageSidebarInfo from './PageSidebarInfo.astro';
const { toc } = Astro.locals.starlightRoute;
---

{
  toc && (
    <>
      <div class="lg:sl-hidden">
        <div class="mobile-dropdown">
          <button class="dropdown-toggle" aria-expanded="false">
            <span>Page Info</span>
            <svg class="dropdown-arrow" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
              <path d="M4.427 9.573L8 6l3.573 3.573a.5.5 0 0 0 .707-.707l-4-4a.5.5 0 0 0-.707 0l-4 4a.5.5 0 1 0 .707.707z"/>
            </svg>
          </button>
          <div class="dropdown-content">
            <PageSidebarInfo />
          </div>
        </div>
        <MobileTableOfContents />
      </div>
      <div class="right-sidebar-panel sl-hidden lg:sl-block">
        <div class="sl-container">
          <PageSidebarInfo />
          <TableOfContents />
        </div>
      </div>
    </>
  )
}

<style>
  @layer starlight.core {
    .right-sidebar-panel {
      padding: 1rem var(--sl-sidebar-pad-x);
    }
    .sl-container {
      width: calc(var(--sl-sidebar-width) - 2 * var(--sl-sidebar-pad-x));
    }
    .right-sidebar-panel :global(h2) {
      color: var(--sl-color-white);
      font-size: var(--sl-text-h5);
      font-weight: 600;
      line-height: var(--sl-line-height-headings);
      margin-bottom: 0.5rem;
    }
    .right-sidebar-panel :global(:where(a)) {
      display: block;
      font-size: var(--sl-text-xs);
      text-decoration: none;
      color: var(--sl-color-gray-3);
      overflow-wrap: anywhere;
    }
    .right-sidebar-panel :global(:where(a):hover) {
      color: var(--sl-color-white);
    }
    
    /* Mobile dropdown styles */
    .mobile-dropdown {
      position: relative;
      margin-bottom: 1rem;
    }
    
    .dropdown-toggle {
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      padding: 0.75rem 1rem;
      background: var(--sl-color-bg-sidebar);
      border: 1px solid var(--sl-color-gray-5);
      border-radius: 0.375rem;
      color: var(--sl-color-white);
      font-size: var(--sl-text-sm);
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    
    .dropdown-toggle:hover {
      background: var(--sl-color-gray-6);
      border-color: var(--sl-color-gray-4);
    }
    
    .dropdown-arrow {
      transition: transform 0.2s ease;
      flex-shrink: 0;
      margin-left: 0.5rem;
    }
    
    .dropdown-toggle[aria-expanded="true"] .dropdown-arrow {
      transform: rotate(180deg);
    }
    
    .dropdown-content {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      z-index: 50;
      background: var(--sl-color-bg-sidebar);
      border: 1px solid var(--sl-color-gray-5);
      border-radius: 0.375rem;
      margin-top: 0.25rem;
      padding: 1rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      display: none;
    }
    
    .dropdown-content.show {
      display: block;
    }
    
    @media (min-width: 72rem) {
      .sl-container {
        max-width: calc(
          (
            (
                100vw - var(--sl-sidebar-width) - 2 * var(--sl-content-pad-x) -
                  2 * var(--sl-sidebar-pad-x)
              ) *
              0.25 /* MAGIC NUMBER ðŸ¥² */
          )
        );
      }
    }
  }
</style>

<script>
  // Add dropdown functionality
  document.addEventListener('DOMContentLoaded', function() {
    const dropdownToggle = document.querySelector('.dropdown-toggle');
    const dropdownContent = document.querySelector('.dropdown-content');
    
    if (dropdownToggle && dropdownContent) {
      dropdownToggle.addEventListener('click', function() {
        const isExpanded = this.getAttribute('aria-expanded') === 'true';
        this.setAttribute('aria-expanded', !isExpanded);
        dropdownContent.classList.toggle('show');
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function(event) {
        if (!dropdownToggle.contains(event.target) && !dropdownContent.contains(event.target)) {
          dropdownToggle.setAttribute('aria-expanded', 'false');
          dropdownContent.classList.remove('show');
        }
      });
    }
  });
</script>
