---
import { getCollection, render } from 'astro:content';
import { Image } from 'astro:assets';
import '@/styles/global.css';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{post.data.title} | Bastion Falls Blog</title>
    <meta name="description" content={post.data.description} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body class="bg-gray-950 text-gray-200">
    <!-- Simple Header -->
    <header
      class="border-b border-gray-800 bg-gray-900/50 backdrop-blur sticky top-0 z-50"
    >
      <div class="max-w-4xl mx-auto px-6 py-4">
        <div class="flex justify-between items-center">
          <a
            href="/blog"
            class="flex items-center gap-3 text-xl font-semibold text-white hover:text-gray-300 transition-colors"
          >
            <img
              src="/orb-of-bastion.png"
              alt="Bastion Falls"
              class="w-8 h-8"
            />
            <span>Bastion Falls Blog</span>
          </a>
          <a
            href="/"
            class="text-sm text-gray-400 hover:text-white transition-colors"
          >
            ← Main Site
          </a>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-4xl mx-auto px-6 py-12">
      <article>
        {post.data.banner && (
          <div class="relative -mx-6 md:mx-0 mb-8">
            <Image
              src={post.data.banner.url}
              alt={post.data.banner.alt || post.data.title}
              class="w-full h-64 md:h-96 object-cover"
              widths={[640, 896, 1280, 1600]}
              sizes="(min-width: 896px) 896px, 100vw"
              loading="eager"
            />
          </div>
        )}
        <nav class="not-content mb-6 text-sm text-gray-400">
          <a href="/blog/" class="inline-flex items-center gap-2 hover:text-gray-200">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4">
              <path d="M11.47 3.84a.75.75 0 0 1 1.06 0l8.69 8.69a.75.75 0 1 1-1.06 1.06l-.65-.65V20a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-3.5a1.5 1.5 0 0 0-3 0V20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-7.06l-.65.65a.75.75 0 1 1-1.06-1.06l8.69-8.69Z"/>
            </svg>
            Home
          </a>
          <span class="mx-2">→</span>
          <span class="text-gray-300">{post.data.title}</span>
        </nav>
        <header class="mb-8 pb-8 border-b border-gray-800">
          <h1 class="text-4xl font-bold text-white mb-4">
            {post.data.title}
            {
              post.data.draft && (
                <span class="ml-4 px-3 py-1.5 text-sm font-medium bg-yellow-900/50 text-yellow-300 border border-yellow-700 rounded-md">
                  Draft
                </span>
              )
            }
          </h1>
          <div class="flex flex-wrap gap-3 items-center text-sm text-gray-400">
            <time datetime={post.data.published.toISOString()}>
              {
                post.data.published.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })
              }
            </time>
            {
              post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map((tag: string) => (
                    <span class="px-2.5 py-1 rounded-md text-xs font-medium bg-gray-800 text-gray-300 border border-gray-700">
                      {tag}
                    </span>
                  ))}
                </div>
              )
            }
          </div>
        </header>

        <div
          class="prose prose-invert prose-lg max-w-none
                    prose-headings:text-white prose-headings:font-semibold
                    prose-p:text-gray-300 prose-p:leading-relaxed
                    prose-a:text-blue-400 prose-a:no-underline hover:prose-a:text-blue-300
                    prose-strong:text-white prose-strong:font-semibold
                    prose-code:text-blue-300 prose-code:bg-gray-900 prose-code:px-1.5 prose-code:py-0.5 prose-code:rounded prose-code:before:content-none prose-code:after:content-none
                    prose-pre:bg-gray-900 prose-pre:border prose-pre:border-gray-800
                    prose-blockquote:border-l-blue-500 prose-blockquote:text-gray-400
                    prose-hr:border-gray-800
                    prose-ul:text-gray-300 prose-ol:text-gray-300
                    prose-li:text-gray-300"
        >
          <Content />
        </div>

        <footer class="mt-12 pt-8 border-t border-gray-800">
          <a
            href="/blog"
            class="text-blue-400 hover:text-blue-300 font-medium transition-colors"
          >
            ← Back to Blog
          </a>
        </footer>
      </article>
    </main>

    <!-- Simple Footer -->
    <footer class="border-t border-gray-800 mt-16 bg-gray-900/50">
      <div
        class="max-w-4xl mx-auto px-6 py-8 text-center text-sm text-gray-400"
      >
        <p>
          &copy; {new Date().getFullYear()} Bastion Falls. All rights reserved.
        </p>
      </div>
    </footer>
  </body>
</html>
