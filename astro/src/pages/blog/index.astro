---
import { getCollection } from 'astro:content';
import '@/styles/global.css';

const posts = await getCollection('posts');

// Sort all posts by date
const allPosts = posts.sort(
  (a, b) => b.data.published.valueOf() - a.data.published.valueOf(),
);

const publishedPosts = allPosts.filter((post) => !post.data.draft);
const draftPosts = allPosts.filter((post) => post.data.draft);
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Blog | Bastion Falls</title>
    <meta
      name="description"
      content="Thoughts, poems, and other musings during the development of the Bastion Falls D&D campaign."
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body class="bg-gray-950 text-gray-200">
    <!-- Simple Header -->
    <header
      class="border-b border-gray-800 bg-gray-900/50 backdrop-blur sticky top-0 z-50"
    >
      <div class="max-w-5xl mx-auto px-6 py-4">
        <div class="flex justify-between items-center">
          <a
            href="/blog"
            class="flex items-center gap-3 text-xl font-semibold text-white hover:text-gray-300 transition-colors"
          >
            <img
              src="/orb-of-bastion.png"
              alt="Bastion Falls"
              class="w-8 h-8"
            />
            <span>Bastion Falls Blog</span>
          </a>
          <a
            href="/"
            class="text-sm text-gray-400 hover:text-white transition-colors"
          >
            ← Main Site
          </a>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-5xl mx-auto px-6 py-12">
      <div class="mb-12">
        <div class="flex items-start justify-between mb-4">
          <div class="flex-1">
            <h1 class="text-4xl font-bold text-white mb-3">Blog</h1>
            <p class="text-lg text-gray-400">
              Thoughts, poems, and other musings during the development of the
              Bastion Falls D&D campaign.
            </p>
          </div>
          <button
            id="toggle-drafts"
            class="px-4 py-2 text-sm font-medium rounded-lg border transition-colors bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700 min-w-[140px]"
          >
            Show Drafts
          </button>
        </div>
      </div>

      <div id="posts-container" class="space-y-8">
        <!-- Draft Posts (hidden by default, shown first when toggled) -->
        {
          draftPosts.map((post) => (
            <article
              data-draft="true"
              class="draft-post border border-gray-800 rounded-lg p-6 bg-gray-900/30 hover:bg-gray-900/50 hover:border-gray-700 transition-all duration-200"
              style="display: none;"
            >
              <h2 class="text-2xl font-semibold mb-3">
                <a
                  href={`/blog/${post.id}`}
                  class="text-white hover:text-gray-300 transition-colors"
                >
                  {post.data.title}
                </a>
                <span class="ml-3 px-2.5 py-1 text-xs font-medium bg-yellow-900/50 text-yellow-300 border border-yellow-700 rounded-md">
                  Draft
                </span>
              </h2>

              <div class="flex flex-wrap gap-3 items-center text-sm text-gray-400 mb-4">
                <time datetime={post.data.published.toISOString()}>
                  {post.data.published.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                  })}
                </time>
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2">
                    {post.data.tags.map((tag: string) => (
                      <span class="px-2.5 py-1 rounded-md text-xs font-medium bg-gray-800 text-gray-300 border border-gray-700">
                        {tag}
                      </span>
                    ))}
                  </div>
                )}
              </div>

              {post.data.description && (
                <p class="text-gray-300 mb-4">{post.data.description}</p>
              )}

              <a
                href={`/blog/${post.id}`}
                class="text-blue-400 hover:text-blue-300 font-medium transition-colors"
              >
                Read more →
              </a>
            </article>
          ))
        }

        <!-- Published Posts -->
        {
          publishedPosts.map((post) => (
            <article class="border border-gray-800 rounded-lg p-6 bg-gray-900/30 hover:bg-gray-900/50 hover:border-gray-700 transition-all duration-200">
              <h2 class="text-2xl font-semibold mb-3">
                <a
                  href={`/blog/${post.id}`}
                  class="text-white hover:text-gray-300 transition-colors"
                >
                  {post.data.title}
                </a>
              </h2>

              <div class="flex flex-wrap gap-3 items-center text-sm text-gray-400 mb-4">
                <time datetime={post.data.published.toISOString()}>
                  {post.data.published.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                  })}
                </time>
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2">
                    {post.data.tags.map((tag: string) => (
                      <span class="px-2.5 py-1 rounded-md text-xs font-medium bg-gray-800 text-gray-300 border border-gray-700">
                        {tag}
                      </span>
                    ))}
                  </div>
                )}
              </div>

              {post.data.description && (
                <p class="text-gray-300 mb-4">{post.data.description}</p>
              )}

              <a
                href={`/blog/${post.id}`}
                class="text-blue-400 hover:text-blue-300 font-medium transition-colors"
              >
                Read more →
              </a>
            </article>
          ))
        }
      </div>

      {
        allPosts.length === 0 && (
          <div class="text-center py-12">
            <p class="text-lg text-gray-400">
              No blog posts yet. Check back soon!
            </p>
          </div>
        )
      }

      <!-- Simple Footer -->
      <footer class="border-t border-gray-800 mt-16 bg-gray-900/50">
        <div
          class="max-w-5xl mx-auto px-6 py-8 text-center text-sm text-gray-400"
        >
          <p>
            &copy; {new Date().getFullYear()} Bastion Falls. All rights reserved.
          </p>
        </div>
      </footer>
    </main>

    <script>
      // Handle draft toggle
      const toggleButton = document.getElementById('toggle-drafts');
      const draftPosts = document.querySelectorAll(
        '.draft-post',
      ) as NodeListOf<HTMLElement>;
      let showingDrafts = false;

      console.log('Draft posts found:', draftPosts.length);

      if (toggleButton) {
        toggleButton.addEventListener('click', () => {
          showingDrafts = !showingDrafts;

          console.log('Toggling drafts. Showing:', showingDrafts);

          draftPosts.forEach((post: HTMLElement) => {
            if (showingDrafts) {
              post.style.display = 'block';
            } else {
              post.style.display = 'none';
            }
          });

          // Update button appearance
          if (showingDrafts) {
            toggleButton.textContent = '✓ Showing Drafts';
            toggleButton.className =
              'px-4 py-2 text-sm font-medium rounded-lg border transition-colors bg-yellow-900/50 text-yellow-300 border-yellow-700 hover:bg-yellow-900/70 min-w-[140px]';
          } else {
            toggleButton.textContent = 'Show Drafts';
            toggleButton.className =
              'px-4 py-2 text-sm font-medium rounded-lg border transition-colors bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700 min-w-[140px]';
          }
        });
      }
    </script>
  </body>
</html>
